const s=JSON.parse('{"key":"v-a9904df6","path":"/zh/posts/banana/SM4.html","title":"SM4 Alg","lang":"zh-CN","frontmatter":{"description":"SM4 Alg 2022/08/24 SM4分组密码算法 GMT 0002-2012 SM4分组密码算法 1. 算法结构 SM4密码算法是一个分组算法 分组长度为128bit 密钥长度为128bit，加密算法与密钥扩展算法都采用32轮非线性迭代结构 。数据解密和数据加密的算法结构相 同,只是轮密钥的使用顺序相反 ,解密轮密钥是加密轮密钥的逆序 先将128比特密钥 MK 扩展为32个轮密钥 rk，再将该轮密钥与128比特明文 X 经过轮函数进行32次迭代后，选取最后四次迭代生成的结果 X32​,X33​,X34​,X35​进行反序变换，该变换结果作为最终的密文 Y 输出。","head":[["meta",{"property":"og:url","content":"https://haocat.github.io/zh/posts/banana/SM4.html"}],["meta",{"property":"og:site_name","content":"Haocat的博客"}],["meta",{"property":"og:title","content":"SM4 Alg"}],["meta",{"property":"og:description","content":"SM4 Alg 2022/08/24 SM4分组密码算法 GMT 0002-2012 SM4分组密码算法 1. 算法结构 SM4密码算法是一个分组算法 分组长度为128bit 密钥长度为128bit，加密算法与密钥扩展算法都采用32轮非线性迭代结构 。数据解密和数据加密的算法结构相 同,只是轮密钥的使用顺序相反 ,解密轮密钥是加密轮密钥的逆序 先将128比特密钥 MK 扩展为32个轮密钥 rk，再将该轮密钥与128比特明文 X 经过轮函数进行32次迭代后，选取最后四次迭代生成的结果 X32​,X33​,X34​,X35​进行反序变换，该变换结果作为最终的密文 Y 输出。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-07T08:35:52.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-07T08:35:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SM4 Alg\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-07T08:35:52.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"1. 算法结构","slug":"_1-算法结构","link":"#_1-算法结构","children":[]},{"level":3,"title":"2. 密钥及密钥参量","slug":"_2-密钥及密钥参量","link":"#_2-密钥及密钥参量","children":[]},{"level":3,"title":"3. 轮函数","slug":"_3-轮函数","link":"#_3-轮函数","children":[]},{"level":3,"title":"4. 算法描述","slug":"_4-算法描述","link":"#_4-算法描述","children":[]},{"level":3,"title":"SM4资源消耗部分相关","slug":"sm4资源消耗部分相关","link":"#sm4资源消耗部分相关","children":[]}],"git":{"createdTime":1675758952000,"updatedTime":1675758952000,"contributors":[{"name":"haocat","email":"haoliangwu1999@outlook.com","commits":1}]},"readingTime":{"minutes":4.24,"words":1271},"filePathRelative":"zh/posts/banana/SM4.md","localizedDate":"2023年2月7日","excerpt":"<h1> SM4 Alg</h1>\\n<p>2022/08/24\\nSM4分组密码算法\\n<em>GMT 0002-2012 SM4分组密码算法</em></p>\\n<h3> 1. 算法结构</h3>\\n<p>SM4密码算法是一个分组算法 分组长度为128bit  密钥长度为128bit，加密算法与密钥扩展算法都采用32轮非线性迭代结构 。数据解密和数据加密的算法结构相 同,只是轮密钥的使用顺序相反 ,解密轮密钥是加密轮密钥的逆序\\n<strong>先将128比特密钥 MK 扩展为32个轮密钥 rk，再将该轮密钥与128比特明文 X 经过轮函数进行32次迭代后，选取最后四次迭代生成的结果 <span class=\\"katex\\"><span class=\\"katex-mathml\\"></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.8778em;vertical-align:-0.1944em;\\"></span><span class=\\"mord\\"><span class=\\"mord mathnormal\\" style=\\"margin-right:0.07847em;\\">X</span><span class=\\"msupsub\\"><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.3011em;\\"><span style=\\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mtight\\">32</span></span></span></span></span><span class=\\"vlist-s\\">​</span></span><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.15em;\\"><span></span></span></span></span></span></span><span class=\\"mpunct\\">,</span><span class=\\"mspace\\" style=\\"margin-right:0.1667em;\\"></span><span class=\\"mord\\"><span class=\\"mord mathnormal\\" style=\\"margin-right:0.07847em;\\">X</span><span class=\\"msupsub\\"><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.3011em;\\"><span style=\\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mtight\\">33</span></span></span></span></span><span class=\\"vlist-s\\">​</span></span><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.15em;\\"><span></span></span></span></span></span></span><span class=\\"mpunct\\">,</span><span class=\\"mspace\\" style=\\"margin-right:0.1667em;\\"></span><span class=\\"mord\\"><span class=\\"mord mathnormal\\" style=\\"margin-right:0.07847em;\\">X</span><span class=\\"msupsub\\"><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.3011em;\\"><span style=\\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mtight\\">34</span></span></span></span></span><span class=\\"vlist-s\\">​</span></span><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.15em;\\"><span></span></span></span></span></span></span><span class=\\"mpunct\\">,</span><span class=\\"mspace\\" style=\\"margin-right:0.1667em;\\"></span><span class=\\"mord\\"><span class=\\"mord mathnormal\\" style=\\"margin-right:0.07847em;\\">X</span><span class=\\"msupsub\\"><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.3011em;\\"><span style=\\"top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mtight\\">35</span></span></span></span></span><span class=\\"vlist-s\\">​</span></span><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.15em;\\"><span></span></span></span></span></span></span></span></span></span>进行反序变换，该变换结果作为最终的密文 Y 输出。</strong>\\n<img src=\\"https://cdn.jsdelivr.net/gh/haocat/img_bed@master/markdown/security/20220826145225.png\\" alt=\\"20220826145225\\" loading=\\"lazy\\"></p>","autoDesc":true}');export{s as data};
